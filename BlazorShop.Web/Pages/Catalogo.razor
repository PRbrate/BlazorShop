@page "/produtos"
@inject IProdutoService produtoService

@if(Produtos is null)
{
    <ExibirSpinner/>
}
else
{
    <h3 class="mb-5">Produtos</h3>
    @if(Produtos.Count() > 0)
    {
        var produtosCategorias = from produto in Produtos group 
                                 produto by produto.CategoriaId into prodPorCatGrupo
                                 orderby prodPorCatGrupo.Key
                                 select prodPorCatGrupo;


        @foreach(var prodGrupo in produtosCategorias)
        {
            <h4>@prodGrupo.FirstOrDefault(pg=> pg.CategoriaId == prodGrupo.Key).CategoriaNome</h4>
            <div class="row mt-3">
                <ExibirProdutos Produtos="@prodGrupo"></ExibirProdutos>
            </div>
            <hr class="mb-2"/>
        }
        
    }
}


@code {
    public IEnumerable<ProdutoDto>? Produtos { get; set; }

    [Inject]
    public IcarrinhoCompraService? carrinhoCompraService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Produtos = await produtoService.GetItens();

        var carrinhocompraIntes = await carrinhoCompraService.GetItem(UsuarioLogado.UsuarioId);
        var totalQuantidade = carrinhocompraIntes.Sum(i => i.Quantidade);

        carrinhoCompraService.RaiseEventOnCarrinhoCarrinhoChanged(totalQuantidade);

    }

}
